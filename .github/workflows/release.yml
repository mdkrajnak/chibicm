name: Rust Cross-Compile and Release

on:
# pull_request:
#   branches:
#     - main
  push:
    branches:
      - test-release

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        target:
#          - x86_64-pc-windows-gnu
          - x86_64-unknown-linux-musl
#          - x86_64-apple-darwin
#          - aarch64-unknown-linux-gnu

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Rust toolchain for ${{ matrix.target }}
        uses: actions/rust-toolchain@v2
        with:
          toolchain: ${{ matrix.target }}
          rust-version: stable

      - name: Install openssl for ${{ matrix.target }}
        run: apt install pkg-config libssl-dev

      - name: Build the project for ${{ matrix.target }}
        run: cargo build --target ${{ matrix.target }} --release --all-features

      - name: Run tests for ${{ matrix.target }}
        run: cargo test --target ${{ matrix.target }} --release

      - name: Get Cargo version
        id: get-cargo-version
        run: |
          cargo metadata | grep version | egrep -o '[[:digit:].]+' > version.txt

      - name: Create single tag
        id: create-single-tag
        uses: actions/create-tag@v3
        with:
          tag: v${{ steps.get-cargo-version.outputs.version }}
          message: "Release v${{ steps.get-cargo-version.outputs.version }}"
          draft: false

      - name: Create release for ${{ matrix.target }}
        uses: actions/create-release@v3
        with:
          tag_name: v${{ steps.get-cargo-version.outputs.version }}
          release_name: "Release v${{ steps.get-cargo-version.outputs.version }}-${{ matrix.target }}"
          draft: true
          prerelease: false

      - name: Create release assets ZIP for ${{ matrix.target }}
        run: |
          zip -r release-assets-${{ matrix.target }}.zip target/${{ matrix.target }}/release/ccauth target/${{ matrix.target }}/release/ccuser CHANGELOG.md README.md

      - name: Upload release assets for ${{ matrix.target }}
        uses: actions/upload-release-asset@v3
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./release-assets-${{ matrix.target }}.zip
          asset_name: release-assets.zip
          asset_content_type: application/zip

